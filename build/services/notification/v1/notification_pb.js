// source: services/notification/v1/notification.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.services.notification.v1.MailType', null, global);
goog.exportSymbol('proto.services.notification.v1.SendMailRequest', null, global);
goog.exportSymbol('proto.services.notification.v1.SendMailResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.notification.v1.SendMailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.services.notification.v1.SendMailRequest.repeatedFields_, null);
};
goog.inherits(proto.services.notification.v1.SendMailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.notification.v1.SendMailRequest.displayName = 'proto.services.notification.v1.SendMailRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.services.notification.v1.SendMailResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.services.notification.v1.SendMailResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.services.notification.v1.SendMailResponse.displayName = 'proto.services.notification.v1.SendMailResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.services.notification.v1.SendMailRequest.repeatedFields_ = [4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.notification.v1.SendMailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.services.notification.v1.SendMailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.notification.v1.SendMailRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.notification.v1.SendMailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    from: jspb.Message.getFieldWithDefault(msg, 3, ""),
    toList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    ccList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    bccList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    subject: jspb.Message.getFieldWithDefault(msg, 7, ""),
    payload: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.notification.v1.SendMailRequest}
 */
proto.services.notification.v1.SendMailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.notification.v1.SendMailRequest;
  return proto.services.notification.v1.SendMailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.notification.v1.SendMailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.notification.v1.SendMailRequest}
 */
proto.services.notification.v1.SendMailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.services.notification.v1.MailType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addTo(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addCc(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addBcc(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayload(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.notification.v1.SendMailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.notification.v1.SendMailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.notification.v1.SendMailRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.notification.v1.SendMailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getToList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getCcList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getBccList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPayload();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.services.notification.v1.SendMailRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.notification.v1.SendMailRequest} returns this
 */
proto.services.notification.v1.SendMailRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional MailType type = 2;
 * @return {!proto.services.notification.v1.MailType}
 */
proto.services.notification.v1.SendMailRequest.prototype.getType = function() {
  return /** @type {!proto.services.notification.v1.MailType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.services.notification.v1.MailType} value
 * @return {!proto.services.notification.v1.SendMailRequest} returns this
 */
proto.services.notification.v1.SendMailRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string from = 3;
 * @return {string}
 */
proto.services.notification.v1.SendMailRequest.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.notification.v1.SendMailRequest} returns this
 */
proto.services.notification.v1.SendMailRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string to = 4;
 * @return {!Array<string>}
 */
proto.services.notification.v1.SendMailRequest.prototype.getToList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.notification.v1.SendMailRequest} returns this
 */
proto.services.notification.v1.SendMailRequest.prototype.setToList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.notification.v1.SendMailRequest} returns this
 */
proto.services.notification.v1.SendMailRequest.prototype.addTo = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.notification.v1.SendMailRequest} returns this
 */
proto.services.notification.v1.SendMailRequest.prototype.clearToList = function() {
  return this.setToList([]);
};


/**
 * repeated string cc = 5;
 * @return {!Array<string>}
 */
proto.services.notification.v1.SendMailRequest.prototype.getCcList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.notification.v1.SendMailRequest} returns this
 */
proto.services.notification.v1.SendMailRequest.prototype.setCcList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.notification.v1.SendMailRequest} returns this
 */
proto.services.notification.v1.SendMailRequest.prototype.addCc = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.notification.v1.SendMailRequest} returns this
 */
proto.services.notification.v1.SendMailRequest.prototype.clearCcList = function() {
  return this.setCcList([]);
};


/**
 * repeated string bcc = 6;
 * @return {!Array<string>}
 */
proto.services.notification.v1.SendMailRequest.prototype.getBccList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.services.notification.v1.SendMailRequest} returns this
 */
proto.services.notification.v1.SendMailRequest.prototype.setBccList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.services.notification.v1.SendMailRequest} returns this
 */
proto.services.notification.v1.SendMailRequest.prototype.addBcc = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.services.notification.v1.SendMailRequest} returns this
 */
proto.services.notification.v1.SendMailRequest.prototype.clearBccList = function() {
  return this.setBccList([]);
};


/**
 * optional string subject = 7;
 * @return {string}
 */
proto.services.notification.v1.SendMailRequest.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.notification.v1.SendMailRequest} returns this
 */
proto.services.notification.v1.SendMailRequest.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string payload = 8;
 * @return {string}
 */
proto.services.notification.v1.SendMailRequest.prototype.getPayload = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.services.notification.v1.SendMailRequest} returns this
 */
proto.services.notification.v1.SendMailRequest.prototype.setPayload = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.services.notification.v1.SendMailResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.services.notification.v1.SendMailResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.services.notification.v1.SendMailResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.notification.v1.SendMailResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.services.notification.v1.SendMailResponse}
 */
proto.services.notification.v1.SendMailResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.services.notification.v1.SendMailResponse;
  return proto.services.notification.v1.SendMailResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.services.notification.v1.SendMailResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.services.notification.v1.SendMailResponse}
 */
proto.services.notification.v1.SendMailResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.services.notification.v1.SendMailResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.services.notification.v1.SendMailResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.services.notification.v1.SendMailResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.services.notification.v1.SendMailResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.services.notification.v1.SendMailResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.services.notification.v1.SendMailResponse} returns this
 */
proto.services.notification.v1.SendMailResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.services.notification.v1.MailType = {
  MAIL_TYPE_UNKNOWN_UNSPECIFIED: 0,
  MAIL_TYPE_CORRECTION_CREATED: 1,
  MAIL_TYPE_CORRECTION_APPROVED: 2,
  MAIL_TYPE_CORRECTION_REJECTED: 3
};

goog.object.extend(exports, proto.services.notification.v1);
